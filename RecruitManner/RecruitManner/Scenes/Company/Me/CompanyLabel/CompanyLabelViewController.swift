//
//  CompanyLabelViewController.swift
//  RecruitManner
//
//  Created by Jiang Duan on 16/11/25.
//  Copyright (c) 2016年 Jiang Duan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CompanyLabelViewControllerInput {

    func displaySomething(viewModel: CompanyLabel.ViewModel)
}

protocol CompanyLabelViewControllerOutput {

    func doSomething(request: CompanyLabel.Request)
}


// ============================================================================= //
// MARK: - CompanyLabelViewController Class Definition
// ============================================================================= //
class CompanyLabelViewController: UIViewController, CompanyLabelViewControllerInput {

    var output: CompanyLabelViewControllerOutput!
    var router: CompanyLabelRouter!
  
    @IBOutlet weak var collectionView: UICollectionView!
    
    // MARK: Object lifecycle
  
    override func awakeFromNib() {

        super.awakeFromNib()
        CompanyLabelConfigurator.sharedInstance.configure(viewController:self)
    }
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {

        super.viewDidLoad()
        
        
        doSomethingOnLoad()
    }
  
    // MARK: Event handling
  
    func doSomethingOnLoad() {
        // NOTE: Ask the Interactor to do some work
    
        let request = CompanyLabel.Request()
        output.doSomething(request: request)
    }
  
    // MARK: Display logic
  
    func displaySomething(viewModel: CompanyLabel.ViewModel) {
        // NOTE: Display the result from the Presenter
    
        // nameTextField.text = viewModel.name
    }
}

extension CompanyLabelViewController: UICollectionViewDataSource {
    
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 3
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return [5,5,0][section]
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "reusableCompanyLabelIdentifier", for: indexPath)
        
        if let label = cell.viewWithTag(1) as? UILabel {
            label.text = ["科技园", "大冲商务中心", "O2O", "社区电商", "互联网"][indexPath.row]
        }
        
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, viewForSupplementaryElementOfKind kind: String, at indexPath: IndexPath) -> UICollectionReusableView {
        let header = collectionView.dequeueReusableSupplementaryView(ofKind: kind, withReuseIdentifier: "reusableHeaderCompanyLabelIdentifier", for: indexPath)
        
        if let label = header.viewWithTag(2) as? UILabel {
            label.text = ["领域标签","福利标签","自定义标签"][indexPath.section]
        }
        
        return header
    }
    
}
