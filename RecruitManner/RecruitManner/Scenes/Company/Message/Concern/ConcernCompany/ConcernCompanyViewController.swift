//
//  ConcernCompanyViewController.swift
//  RecruitManner
//
//  Created by Jiang Duan on 16/11/23.
//  Copyright (c) 2016年 Jiang Duan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ConcernCompanyViewControllerInput
{
    func displayTable(viewModel: ConcernCompany.ViewModel)
}

protocol ConcernCompanyViewControllerOutput
{
    func doSomething(request: ConcernCompany.Request)
    var selectedCompany: String? { get set }
}


// ============================================================================= //
// MARK: - ConcernCompanyViewController Class Definition
// ============================================================================= //
class ConcernCompanyViewController: UITableViewController, ConcernCompanyViewControllerInput
{
    var output: ConcernCompanyViewControllerOutput!
    var router: ConcernCompanyRouter!
    
    var viewModel = ConcernCompany.ViewModel()
    
    // MARK: Object lifecycle
    
    override func awakeFromNib()
    {
        super.awakeFromNib()
        ConcernCompanyConfigurator.sharedInstance.configure(viewController:self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomethingOnLoad()
    }
    
    // MARK: Event handling
    
    func doSomethingOnLoad()
    {
        // NOTE: Ask the Interactor to do some work
        
        let request = ConcernCompany.Request()
        output.doSomething(request: request)
    }
    
    // MARK: Display logic
    
    func displayTable(viewModel: ConcernCompany.ViewModel) {
        self.viewModel = viewModel
        self.tableView.reloadData()
    }
}


extension ConcernCompanyViewController {
    
    override func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
        return "已设置关注的公司人才 (\(self.viewModel.count ?? 0) / \(self.viewModel.total ?? 0))"
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.viewModel.count ?? 0
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let Identifier = "CellConcernCompanyIdentifier"
        let cell = tableView.dequeueReusableCell(withIdentifier: Identifier, for: indexPath)
        
        let model = self.viewModel.companys?[indexPath.row]
        cell.textLabel?.text = model
        
        return cell
    }
    
    override func tableView(_ tableView: UITableView, willSelectRowAt indexPath: IndexPath) -> IndexPath? {
        output.selectedCompany = self.viewModel.companys?[indexPath.row]
        return indexPath
    }
    
}
