//
//  ConcernJobSeekerViewController.swift
//  RecruitManner
//
//  Created by Jiang Duan on 16/11/23.
//  Copyright (c) 2016å¹´ Jiang Duan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import CustomViews

protocol ConcernJobSeekerViewControllerInput
{
    func displayTable(viewModel: ConcernJobSeeker.ViewModel)
    
}

protocol ConcernJobSeekerViewControllerOutput
{
    func doSomething(request: ConcernJobSeeker.Request)
    
    var selectedCompany: String? { get set }
}


// ============================================================================= //
// MARK: - ConcernJobSeekerViewController Class Definition
// ============================================================================= //
class ConcernJobSeekerViewController: UITableViewController, ConcernJobSeekerViewControllerInput
{
    var output: ConcernJobSeekerViewControllerOutput!
    var router: ConcernJobSeekerRouter!
    
    var viewModel = ConcernJobSeeker.ViewModel()
    
    // MARK: Object lifecycle
    
    override func awakeFromNib()
    {
        super.awakeFromNib()
        ConcernJobSeekerConfigurator.sharedInstance.configure(viewController:self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomethingOnLoad()
    }
    
    // MARK: Event handling
    
    func doSomethingOnLoad()
    {
        // NOTE: Ask the Interactor to do some work
        
        let request = ConcernJobSeeker.Request()
        output.doSomething(request: request)
    }
    
    // MARK: Display logic
    
    func displayTable(viewModel: ConcernJobSeeker.ViewModel) {
        self.viewModel = viewModel
        self.tableView.reloadData()
    }
}

extension ConcernJobSeekerViewController {
    
    override func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
        return self.viewModel.companyName
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.viewModel.jobSeekers?.count ?? 0
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let Identifier = "CellResumeDeliverIdentifier"
        let cell = tableView.dequeueReusableCell(withIdentifier: Identifier, for: indexPath)
        
        guard let view = cell.viewWithTag(1) as? ResumeDeliverItemView else {
            return cell
        }
        
        guard let modle = viewModel.jobSeekers?[indexPath.row] else {
            return cell
        }
        
        view.nameLabel.text = modle.name
        view.infoLabel.text = modle.info
        view.markLabel.text = modle.mark
        view.companyLabel.text = modle.company
        view.ageLimitLabel.text = modle.ageLimit
        view.deliveryTimeLabel.text = modle.deliveryTime
        
        if let urlstring = modle.logoImageUlr, let url = URL(string: urlstring) {
            view.logoImageView.sd_setImageWithPreviousCachedImage(with: url,
                                                                  placeholderImage: UIImage(named: "social_logo"),
                                                                  options: .continueInBackground,
                                                                  progress: nil,
                                                                  completed: nil)
        }
        
        if let usrstr = modle.userImageUlr, let usrUrl = URL(string: usrstr) {
            view.userImageView.sd_setImageWithPreviousCachedImage(with: usrUrl,
                                                                  placeholderImage: UIImage(named: "User"),
                                                                  options: .continueInBackground,
                                                                  progress: nil,
                                                                  completed: nil)
        }
        
        return cell
    }
    
}
