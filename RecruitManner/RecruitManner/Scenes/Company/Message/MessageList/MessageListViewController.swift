//
//  MessageListViewController.swift
//  RecruitManner
//
//  Created by Jiang Duan on 16/12/9.
//  Copyright (c) 2016å¹´ Jiang Duan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol MessageListViewControllerInput{
    
    func displayNewResumesInfo(viewModel: MessageList.ViewModel)
    func displayCompanyTrackInfo(viewModel: MessageList.ViewModel)
    func displayConcernInfo(viewModel: MessageList.ViewModel)
    func displayWhoSeeMyInfo(viewModel: MessageList.ViewModel)
    func displaySystemInfo(viewModel: MessageList.ViewModel)
}

protocol MessageListViewControllerOutput
{
    func doSomething(request: MessageList.Request)
}


// ============================================================================= //
// MARK: - MessageListViewController Class Definition
// ============================================================================= //
class MessageListViewController: UITableViewController, MessageListViewControllerInput
{
    var output: MessageListViewControllerOutput!
    var router: MessageListRouter!
    
    // MARK: Object lifecycle
    
    override func awakeFromNib()
    {
        super.awakeFromNib()
        MessageListConfigurator.sharedInstance.configure(viewController:self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        doSomethingOnLoad()
    }
    
    // MARK: Event handling
    
    func doSomethingOnLoad()
    {
        // NOTE: Ask the Interactor to do some work
        
        let request = MessageList.Request()
        output.doSomething(request: request)
    }
    
    
}

// MARK: Display logic

extension MessageListViewController {
    
    func displayNewResumesInfo(viewModel: MessageList.ViewModel) {
        guard let cell = self.tableView.cellForRow(at: IndexPath(row: 0, section: 0)) else {
            return
        }
        
        let logoView = cell.viewWithTag(1) as? UIImageView
        let infoLable = cell.viewWithTag(3) as? UILabel
        let dateLabel = cell.viewWithTag(4) as? UILabel
        
        infoLable?.text = viewModel.infoNewResume?.info
        dateLabel?.text = viewModel.infoNewResume?.date
        
        if let string = viewModel.infoNewResume?.logo, let url = URL(string: string) {
            logoView?.sd_setImageWithPreviousCachedImage(with: url,
                                                         placeholderImage: UIImage(named: "social_logo"),
                                                         options: .continueInBackground,
                                                         progress: nil,
                                                         completed: nil)
        }
        
        tableView.reloadSections(IndexSet(integersIn: 0 ..< 1), with: .none)
    }
    
    func displayCompanyTrackInfo(viewModel: MessageList.ViewModel) {
        guard let cell = self.tableView.cellForRow(at: IndexPath(row: 0, section: 1)) else {
            return
        }
        
        cell.detailTextLabel?.text = viewModel.infoCompanyTrack?.info
        if let string = viewModel.infoCompanyTrack?.logo, let url = URL(string: string) {
            cell.imageView?.sd_setImageWithPreviousCachedImage(with: url,
                                                               placeholderImage: UIImage(named: "social_logo"),
                                                               options: .continueInBackground,
                                                               progress: nil,
                                                               completed: nil)
        }
        
        tableView.reloadSections(IndexSet(integersIn: 1 ..< 2), with: .none)
    }
    
    func displayConcernInfo(viewModel: MessageList.ViewModel) {
        guard let cell = self.tableView.cellForRow(at: IndexPath(row: 0, section: 2)) else {
            return
        }
        
        let logoView = cell.viewWithTag(1) as? UIImageView
        let infoLable = cell.viewWithTag(3) as? UILabel
        let dateLabel = cell.viewWithTag(4) as? UILabel
        
        infoLable?.text = viewModel.infoConcern?.info
        dateLabel?.text = viewModel.infoConcern?.date
        
        if let string = viewModel.infoConcern?.logo, let url = URL(string: string) {
            logoView?.sd_setImageWithPreviousCachedImage(with: url,
                                                         placeholderImage: UIImage(named: "social_logo"),
                                                         options: .continueInBackground,
                                                         progress: nil,
                                                         completed: nil)
        }
        
        tableView.reloadSections(IndexSet(integersIn: 2 ..< 3), with: .none)
    }
    
    func displayWhoSeeMyInfo(viewModel: MessageList.ViewModel) {
        guard let cell = self.tableView.cellForRow(at: IndexPath(row: 0, section: 3)) else {
            return
        }
        
        cell.detailTextLabel?.text = viewModel.infoWhoSeeMy?.info
        if let string = viewModel.infoWhoSeeMy?.logo, let url = URL(string: string) {
            cell.imageView?.sd_setImageWithPreviousCachedImage(with: url,
                                                               placeholderImage: UIImage(named: "social_logo"),
                                                               options: .continueInBackground,
                                                               progress: nil,
                                                               completed: nil)
        }
        
        tableView.reloadSections(IndexSet(integersIn: 3 ..< 4), with: .none)
    }
    
    func displaySystemInfo(viewModel: MessageList.ViewModel) {
        guard let cell = self.tableView.cellForRow(at: IndexPath(row: 0, section: 4)) else {
            return
        }
        
        let logoView = cell.viewWithTag(1) as? UIImageView
        let infoLable = cell.viewWithTag(3) as? UILabel
        let dateLabel = cell.viewWithTag(4) as? UILabel
        
        infoLable?.text = viewModel.infoSystem?.info
        dateLabel?.text = viewModel.infoSystem?.date
        
        if let string = viewModel.infoSystem?.logo, let url = URL(string: string) {
            logoView?.sd_setImageWithPreviousCachedImage(with: url,
                                                         placeholderImage: UIImage(named: "social_logo"),
                                                         options: .continueInBackground,
                                                         progress: nil,
                                                         completed: nil)
        }
        
        tableView.reloadSections(IndexSet(integersIn: 4 ..< 5), with: .none)
    }
}

