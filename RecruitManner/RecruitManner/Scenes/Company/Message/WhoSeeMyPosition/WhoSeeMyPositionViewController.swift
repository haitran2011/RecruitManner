//
//  WhoSeeMyPositionViewController.swift
//  RecruitManner
//
//  Created by Jiang Duan on 16/11/23.
//  Copyright (c) 2016å¹´ Jiang Duan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol WhoSeeMyPositionViewControllerInput
{
    func displayTable(viewModel: WhoSeeMyPosition.ViewModel)
}

protocol WhoSeeMyPositionViewControllerOutput
{
    func doSomething(request: WhoSeeMyPosition.Request)
}


// ============================================================================= //
// MARK: - WhoSeeMyPositionViewController Class Definition
// ============================================================================= //
class WhoSeeMyPositionViewController: UITableViewController, WhoSeeMyPositionViewControllerInput
{
    var output: WhoSeeMyPositionViewControllerOutput!
    var router: WhoSeeMyPositionRouter!
    
    var viewModel = WhoSeeMyPosition.ViewModel()
    
    // MARK: Object lifecycle
    
    override func awakeFromNib()
    {
        super.awakeFromNib()
        WhoSeeMyPositionConfigurator.sharedInstance.configure(viewController:self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomethingOnLoad()
    }
    
    // MARK: Event handling
    
    func doSomethingOnLoad()
    {
        // NOTE: Ask the Interactor to do some work
        
        let request = WhoSeeMyPosition.Request()
        output.doSomething(request: request)
    }
    
    // MARK: Display logic
    
    func displayTable(viewModel: WhoSeeMyPosition.ViewModel) {
        // NOTE: Display the result from the Presenter
        self.viewModel = viewModel
        self.tableView.reloadData()
    }
}


extension WhoSeeMyPositionViewController {
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.viewModel.items?.count ?? 0
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let Identifier = "CellWhoSeeMyPositionIdentifier"
        let cell = tableView.dequeueReusableCell(withIdentifier: Identifier, for: indexPath)
        
        guard let view = cell as? WhoSeeMyCellView else {
            return cell
        }
        
        view.viewModel = self.viewModel.items?[indexPath.row]
        
        return cell
    }
    
}
