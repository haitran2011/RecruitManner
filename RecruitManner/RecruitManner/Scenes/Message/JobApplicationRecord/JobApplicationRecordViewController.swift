//
//  JobApplicationRecordViewController.swift
//  RecruitManner
//
//  Created by Jiang Duan on 16/11/21.
//  Copyright (c) 2016å¹´ Jiang Duan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol JobApplicationRecordViewControllerInput
{
    func displaySomething(viewModel: JobApplicationRecord.ViewModel)
}

protocol JobApplicationRecordViewControllerOutput
{
    func doSomething(request: JobApplicationRecord.Request)
}


// ============================================================================= //
// MARK: - JobApplicationRecordViewController Class Definition
// ============================================================================= //
class JobApplicationRecordViewController: UITableViewController, JobApplicationRecordViewControllerInput
{
    var output: JobApplicationRecordViewControllerOutput!
    var router: JobApplicationRecordRouter!
    
    // MARK: Object lifecycle
    
    override func awakeFromNib()
    {
        super.awakeFromNib()
        JobApplicationRecordConfigurator.sharedInstance.configure(viewController:self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomethingOnLoad()
    }
    
    // MARK: Event handling
    
    func doSomethingOnLoad()
    {
        // NOTE: Ask the Interactor to do some work
        
        let request = JobApplicationRecord.Request()
        output.doSomething(request: request)
    }
    
    // MARK: Display logic
    
    func displaySomething(viewModel: JobApplicationRecord.ViewModel)
    {
        // NOTE: Display the result from the Presenter
        
        // nameTextField.text = viewModel.name
    }
}

extension JobApplicationRecordViewController {

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 5
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let Identifier = "CellJobApplicationRecordIdentifier"
        let cell = tableView.dequeueReusableCell(withIdentifier: Identifier, for: indexPath)
        
        return cell
    }
}
