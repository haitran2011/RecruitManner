//
//  NearJobViewController.swift
//  RecruitManner
//
//  Created by xiaohui on 16/11/15.
//  Copyright (c) 2016å¹´ Jiang Duan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol NearJobViewControllerInput {

    func displaySomething(viewModel: NearJob.ViewModel)
}

protocol NearJobViewControllerOutput {

    func doSomething(request: NearJob.Request)
}


// ============================================================================= //
// MARK: - NearJobViewController Class Definition
// ============================================================================= //
class NearJobViewController: UIViewController, NearJobViewControllerInput {

    var output: NearJobViewControllerOutput!
    var router: NearJobRouter!
    
    @IBOutlet weak var childView1: UIView!
    @IBOutlet weak var childView2: UIView!
    
  
    @IBOutlet weak var tableView: UITableView!
    // MARK: Object lifecycle
  
    override func awakeFromNib() {

        super.awakeFromNib()
        NearJobConfigurator.sharedInstance.configure(viewController: self)
    }
    
    @IBAction func selectCompanyAction(_ sender: Any) {
        
        //self.switchChildViewController(sender)
        childView2.isHidden = !childView2.isHidden
        childView1.isHidden = true
        
    }
    
    @IBAction func selectJobAction(_ sender: UIButton) {
        //self.switchChildViewController(sender)
        childView1.isHidden = !childView1.isHidden
        childView2.isHidden = true

    }
    
    // MARK: View lifecycle
  
    override func viewDidLoad() {

        super.viewDidLoad()
        doSomethingOnLoad()

    }
  
    // MARK: Event handling
  
    func doSomethingOnLoad() {
        // NOTE: Ask the Interactor to do some work
    
        let request = NearJob.Request()
        output.doSomething(request: request)
    }
  
    // MARK: Display logic
  
    func displaySomething(viewModel: NearJob.ViewModel) {
        // NOTE: Display the result from the Presenter
    
        // nameTextField.text = viewModel.name
    }

}

extension NearJobViewController:UITableViewDelegate,UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 5
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "JobNearIdentifier", for: indexPath)
        return cell
    }
}
